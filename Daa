from collections import defaultdict
from utils.db import execute_query  # Adjust path to your execute_query method

def fetch_onsite_grade_distribution_from_fabric(project_id: str):
    """
    Query Fabric to fetch onsite consultant grade distribution for a given project.
    Returns (labels, data) tuple.
    """
    
    """

    rows = execute_query(grade_query, (project_id,))

    grade_counts = defaultdict(int)

    for row in rows:
        grade = row[0]
        count = row[1]
        if not grade:
            continue
        normalized = str(grade).upper().strip()
        grade_counts[normalized] += count

    labels = sorted(grade_counts.keys())  # Or custom_sort(grade_counts.keys())
    data = [grade_counts[g] for g in labels]

    return labels, data
